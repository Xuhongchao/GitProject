package com.wisetrust.controller;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.servlet.ModelAndView;

import com.wisetrust.domain.Account;
import com.wisetrust.request.AccountUpdateRequest;

/**
 * Created by @author xu on @date 2018年 1月 5日 下午3:34:24
 * 
 * 账户控制器
 */
@Controller
@RequestMapping(value = "/account")
public class AccountController {
	List<Account> list = new ArrayList<>();
	Account account1 = new Account(1L, "张三", "15110232314", "111111");
	Account account2 = new Account(2L, "李四", "15110232314", "111111");
	Account account3 = new Account(3L, "王五", "15110232314", "111111");

	/**
	 * 查看全部账户信息
	 * 
	 * @return
	 */
	@RequestMapping(value = "/list")
	public String getAccountList(HttpServletRequest request) {
		list.add(account1);
		list.add(account2);
		list.add(account3);
		request.setAttribute("list", list);

		return "account/list";
	}

	/**
	 * 通过id查找账户
	 * 
	 * @param id
	 *            账户id
	 * @return
	 */
	@RequestMapping(value = "/find/{id}", method = RequestMethod.GET)
	public ModelAndView getAccountByID(@PathVariable(value = "id") String id) {
		Account account = new Account();
		account.setId(3L);
		account.setLoginName("张三");
		account.setCellphone("15110232314");

		return new ModelAndView("account/view").addObject(account);
	}

	/**
	 * 添加新账户
	 * 
	 * @param account
	 * @param result
	 * @param model
	 * @return
	 */
	@RequestMapping(value = "/add", method = RequestMethod.GET)
	public String addAccount(Model model) {
		Account account = new Account();
		model.addAttribute("account", account);
		model.addAttribute(account);

		return "account/add";
	}

	/**
	 * 添加新账户检查
	 * 
	 * @param account
	 * @param result
	 * @param model
	 * @return
	 */
	@RequestMapping(value = "/add", method = RequestMethod.POST)
	public String addAccountCheck(@Valid @ModelAttribute(value = "account") Account account, BindingResult result,
			HttpServletRequest request) {

		System.out.println(account.getPassword());

		if (result.hasErrors()) {
			return "account/add";
		}

		Object obj = request.getAttribute("list");
		if (obj != null) {
			request.removeAttribute("list");
		}

		// 模拟从数据库读取的数据
		account.setId(4L);
		list.add(account);
		list.add(account1);
		list.add(account2);
		list.add(account3);
		request.setAttribute("list", list);

		return "account/list";
	}

	/**
	 * 更新用户
	 * 
	 * @param id
	 * @param model
	 * @return
	 */
	@RequestMapping(value = "/update", method = RequestMethod.GET)
	public String update(@PathVariable("id") String id, Model model, HttpServletRequest request) {
		if (id == null) {
			return "error";
		}
		AccountUpdateRequest accountUpdateRequest = new AccountUpdateRequest();
		model.addAttribute("accountUpdateRequest", accountUpdateRequest);

		// 模拟通过id查找的方法
		Account account = new Account();
		account.setId(3L);
		account.setLoginName("张三");
		account.setCellphone("15110232314");
		account.setPassword("111111");
		model.addAttribute("account", account);

		return "account/view";
	}

	/**
	 * 更新用户
	 * 
	 * @param id
	 * @param model
	 * @return
	 */
	@RequestMapping(value = "/update", method = RequestMethod.POST)
	public String updateCheck(@Valid @ModelAttribute("accountUpdateRequest") AccountUpdateRequest accountUpdateRequest,
			BindingResult result, Model model) {
		if (result.hasErrors()) {
			return "account/view";
		}
		
		// 模拟通过accountUpdateRequest
		Account account = new Account();
		account.setId(3L);
		account.setLoginName("张三");
		account.setCellphone("15110232314");
		account.setPassword("111111");
		model.addAttribute("account", account);

		return "account/update";
	}

}
